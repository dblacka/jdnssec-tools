<?xml version="1.0"?>

<!--
     build.xml for jdnssec-tools
     ===========================

     Just run Ant using Ant's scripts ("ant") to compile.  Once you
     have done that, a "build/classes" directory will be created
     containing the compiled class files.

-->

<project default="build" basedir=".">

  <property file="build.properties" />
  <property file="VERSION" />


  <property name="build.dir" value="build" />
  <property name="build.dest" value="${build.dir}/classes" />
  <property name="build.lib.dest" value="${build.dir}/libs" />
  <property name="build.src" value="src/main/java" />

  <property name="dist.dir" value="dist"/>
  <property name="dist.name" value="jdnssec-tools-${version}" />

  <property name="packages" value="com.verisignlabs.dnssec.*" />
  <property name="doc.dir" value="docs" />
  <property name="javadoc.dest" value="${doc.dir}/javadoc" />

  <property name="lib.dir" value="lib" />

  <!-- set the standard classpath -->
  <path id="project.classpath">
    <pathelement location="${build.dest}" />
    <fileset dir="${lib.dir}" includes="*.jar,*.zip" />
  </path>

  <property name="project.classpath" refid="project.classpath" />

  <target name="prepare-src">
    <mkdir dir="${build.dest}" />
    <mkdir dir="${build.lib.dest}" />
  </target>

  <target name="compile" depends="prepare-src" >
    <javac srcdir="${build.src}"
           destdir="${build.dest}"
           classpathref="project.classpath"
           deprecation="${build.deprecation}"
           includeantruntime="false"
           includes="com/verisignlabs/dnssec/"
           debug="${build.debug}"
           release="${build.java_version}" />
  </target>

  <target name="build-jar" depends="usage, compile">
    <jar jarfile="${build.lib.dest}/jdnssec-tools.jar"
         basedir="${build.dest}"
         includes="com/verisignlabs/dnssec/" />
  </target>

  <target name="build"
          depends="usage,build-jar">
  </target>

  <target name="build-onejar" depends="compile">
    <jar destfile="${dist.dir}/${dist.name}.jar">
      <zipfileset dir="${build.dest}" includes="**/*.class" />

      <zipfileset src="${lib.dir}/dnsjava-3.5.3.jar" />
      <zipfileset src="${lib.dir}/commons-cli-1.6.0.jar" />
      <zipfileset src="${lib.dir}/slf4j-api-1.7.36.jar" />
      <zipfileset src="${lib.dir}/slf4j-simple-1.7.36.jar" />
      <manifest>
        <attribute name="Main-Class"
                   value="com.verisignlabs.dnssec.cl.CLI" />
      </manifest>
    </jar>
  </target>

  <target name="javadoc" depends="usage">
    <mkdir dir="${javadoc.dest}"/>
    <javadoc packagenames="${packages}"
             classpath="${project.classpath}"
             sourcepath="${build.src}"
             destdir="${javadoc.dest}"
             verbose="true" author="true"
             windowtitle="jdnssec-tools-${version}"
             use="true">
      <link href="https://docs.oracle.com/javase/8/docs/api/" />
      <link href="http://www.xbill.org/dnsjava/doc/" />
    </javadoc>
  </target>

  <target name="clean" depends="usage">
    <delete dir="${build.dest}" />
    <delete dir="${build.lib.dest}" />
    <delete dir="${dist.dir}" />    
  </target>

  <target name="dist-clean" depends="usage">
    <delete dir="${dist.name}" />
  </target>

  <target name="dist-prepare" depends="usage, build, javadoc">
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${dist.name}" />

    <copy todir="${dist.name}">
      <fileset dir=".">
        <include name="bin/jdnssec-*" />
        <include name="lib/*.jar" />
        <include name="lib/*.zip" />
        <include name="doc/**" />
        <include name="licenses/" />
        <include name="src/**/*.java" />
        <include name="VERSION" />
        <include name="README" />
        <include name="build.xml" />
        <include name="build.properties" />
      </fileset>
    </copy>

    <copy todir="${dist.name}/lib">
      <fileset dir="${build.lib.dest}">
        <include name="*.jar" />
       </fileset>
    </copy>
  </target>

  <patternset id="exec.files">
    <include name="${dist.name}/bin/jdnssec-*" />
  </patternset>

  <patternset id="src.files">
    <include name="${dist.name}/src/" />
    <include name="${dist.name}/build.xml" />
    <include name="${dist.name}/build.properties" />
  </patternset>

  <patternset id="bin.files">
    <include name="${dist.name}/doc/" />
    <include name="${dist.name}/lib/" />
    <include name="${dist.name}/licenses/" />
    <include name="${dist.name}/VERSION" />
    <include name="${dist.name}/README" />
  </patternset>

  <target name="bin-dist" depends="dist-prepare">
    <tar destfile="${dist.dir}/${dist.name}.tar.gz" compression="gzip">
      <tarfileset mode="755" dir=".">
        <patternset refid="exec.files" />
      </tarfileset>
      <tarfileset dir=".">
        <patternset refid="bin.files" />
      </tarfileset>
    </tar>
  </target>

  <target name="src-dist" depends="dist-prepare">
    <tar destfile="${dist.dir}/${dist.name}-src.tar.gz" compression="gzip">
      <tarfileset dir=".">
        <patternset refid="src.files" />
      </tarfileset>
    </tar>
  </target>

  <target name="dist"
         depends="bin-dist, src-dist, build-onejar, dist-clean">
  </target>

  <target name="usage">
    <echo message=" " />
    <echo message="jdnssec-tools v. ${version} Build System" />
    <echo message="--------------------------------" />
    <echo message="Available Targets:" />
    <echo message="  build (default)   - compiles the source code, creates main jar" />
    <echo message="  javadoc           - create javadoc from source" />
    <echo message="  clean             - delete class files" />
    <echo message="  dist              - package it up" />
    <echo message="  onejar            - build the executable jar" />
    <echo message="  usage             - this help message" />
    <echo message=" " />
  </target>

</project>
